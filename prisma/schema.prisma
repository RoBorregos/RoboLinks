generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
}

model Link {
  idLink      Int        @id @default(autoincrement())
  idUser      String
  title       String
  description String?
  url         String     @db.Text
  picUrl      String     @default("https://cdn-icons-png.flaticon.com/512/3541/3541854.png")
  createdAt   DateTime   @default(now())
  updatedAt   DateTime
  short       String     @unique
  User        User       @relation(fields: [idUser], references: [id])
  LinkTags    LinkTags[]
  Visit       Visit[]

  @@index([idUser], map: "Link_idUser_fkey")
}

model LinkTags {
  idLinkTags Int  @id @default(autoincrement())
  idLink     Int
  idTag      Int
  Link       Link @relation(fields: [idLink], references: [idLink])
  Tag        Tag  @relation(fields: [idTag], references: [idTag])

  @@index([idLink], map: "LinkTags_idLink_fkey")
  @@index([idTag], map: "LinkTags_idTag_fkey")
}

model Tag {
  idTag    Int        @id @default(autoincrement())
  tagName  String     @unique
  tagColor String
  LinkTags LinkTags[]
}

// model User {
//   idUser    Int      @id @default(autoincrement())
//   username  String   @unique
//   email     String   @unique
//   password  String?
//   picUrl    String?
//   createdAt DateTime @default(now())
//   Link      Link[]
// }

model User {
  id            String          @id @default(cuid())
  name          String?
  username      String?         @unique
  email         String?         @unique
  emailVerified DateTime?
  image         String?
  role          String          @default("user")
  Session       Session[]
  Account       Account?
  Link      Link[]
  picUrl    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Visit {
  idVisit   Int      @id @default(autoincrement())
  idLink    Int
  ip        String?
  createdAt DateTime @default(dbgenerated("(now())")) @db.Date
  country   String?
  Link      Link     @relation(fields: [idLink], references: [idLink])

  @@index([idLink], map: "Visit_idLink_fkey")
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String  @unique
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.Text
  access_token             String? @db.Text
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.Text
  session_state            String?
  refresh_token_expires_in Int?
  user                     User?   @relation(fields: [userId], references: [id])
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  @@unique([provider, providerAccountId])
  @@index([userId])
}
 
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
  roles        String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  @@index([userId])
}
 
model VerificationToken {
  id         String   @id @default(cuid())
  identifier String
  token      String
  expires    DateTime

  @@unique([identifier, token])
}